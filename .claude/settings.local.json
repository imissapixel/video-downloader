{
  "permissions": {
    "allow": [
      "Bash(gh repo create video-downloader --public --source=. --remote=origin --push)",
      "Bash(git init)",
      "Bash(git add .)",
      "Bash(git commit -m \"$(cat <<'EOF'\nInitial commit - Video downloader project\n\nü§ñ Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git reset --soft HEAD~1)",
      "Bash(git rm -r --cached video_downloader_env/ __pycache__/)",
      "Bash(git commit --amend -m \"$(cat <<'EOF'\nInitial commit - Video downloader project\n\nü§ñ Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push origin master)",
      "Bash(echo $LD_LIBRARY_PATH)",
      "Bash(find /opt/rovo* -name \"libstdc++.so.6\")",
      "Bash(python3 -c \"import subprocess; result = subprocess.run(['ffmpeg', '-version'], capture_output=True, text=True); print('STDOUT:', result.stdout[:200]); print('STDERR:', result.stderr[:200]); print('Return code:', result.returncode)\")",
      "Bash(python3 app.py)",
      "Bash(lsof -i :5000)",
      "Bash(kill 10534 10538)",
      "Bash(python3 test_cookie_fix.py)",
      "Bash(python3 -c \"\ncookies = '__Secure-3PAPISID=gJfbdfBfYn8BX2ub/AvCmaz7_ttm70Yfjn; PREF=f6=40000000&f7=4100&tz=Asia.Dubai&f4=4000000; CONSENT=YES+; visitor=1'\nimport re\nallowed = set(re.findall(r'[a-zA-Z0-9_\\-=;. /+:]', cookies))\nactual = set(cookies)\ninvalid = actual - allowed\nprint('Invalid chars:', invalid)\nprint('All chars:', sorted(actual))\n\")",
      "Bash(rm test_cookie_fix.py)",
      "Bash(python3 test_cookies.py)",
      "Bash(python3 test_new_cookies.py)",
      "Bash(rm test_cookies.py test_new_cookies.py)",
      "WebFetch(domain:github.com)",
      "Bash(yt-dlp --help)",
      "Bash(yt-dlp --cookies test_cookies_manual.txt --simulate --print \"%(title)s\" \"https://www.youtube.com/watch?v=XD00TJ-6WSw\")",
      "Bash(rm test_cookies_manual.txt test_video_download.py)",
      "Bash(python3 test_fresh_cookies.py)",
      "Bash(python3 -c \"\ncookies = '__Secure-3PAPISID=gJfbdfBfYn8BX2ub/AvCmaz7_ttm70Yfjn; PREF=f6=40000000&f7=4100&tz=Asia.Dubai&f4=4000000; CONSENT=YES+; visitor=1; ST-twq4lr=itct=CIQDENwwIhMIkY7iqr_2jQMV94TkBh388jELMgpnLWhpZ2gtcmVjWg9GRXdoYXRfdG9fd2F0Y2iaAQYQjh4YngE%3D&csn=ZG6qSG_RkfzZ6jmo&session_logininfo=AFmmF2swRAIgGJutkqxrn72gQa6Z-t0rF675_7-4kLIo5p3cutnxnc0CIA9k-gVexK9M_jOLK67VoK6u3satOy5xN8FjVdE5m1Rx%3AQUQ3MjNmelV0UUxRZG84ZXIxajJ4MFNUM1hnbi1zLXRnS3N5Y2w3Tkt5OUFDbFZlbGtwQlI0QWU3d3RYeHQteUtFeUFwNG5MZXJxamZrTGN6S05XUGl0WFB0ck1qWDlDUDBkWTJyaDc2VkpaMUdORXZVODFUZlA0aEkwSWpuWkZTazZfeFFjSndjNjRPb2praXY1ZWNlS0k1aWxCQ1FrVk5n&endpoint=%7B%22clickTrackingParams%22%3A%22CIQDENwwIhMIkY7iqr_2jQMV94TkBh388jELMgpnLWhpZ2gtcmVjWg9GRXdoYXRfdG9fd2F0Y2iaAQYQjh4YngE%3D%22%2C%22commandMetadata%22%3A%7B%22webCommandMetadata%22%3A%7B%22url%22%3A%22%2Fwatch%3Fv%3DJgDNFQ2RaLQ%26list%3DRDJgDNFQ2RaLQ%26start_radio%3D1%26pp%3DoAcB%22%2C%22webPageType%22%3A%22WEB_PAGE_TYPE_WATCH%22%2C%22rootVe%22%3A3832%7D%7D%2C%22watchEndpoint%22%3A%7B%22videoId%22%3A%22JgDNFQ2RaLQ%22%2C%22playlistId%22%3A%22RDJgDNFQ2RaLQ%22%2C%22params%22%3A%22OAHAAQG4BQE%253D%22%2C%22playerParams%22%3A%22oAcB%22%2C%22loggingContext%22%3A%7B%22vssLoggingContext%22%3A%7B%22serializedContextData%22%3A%22Gg1SREpnRE5GUTJSYUxR%22%7D%7D%2C%22watchEndpointSupportedOnesieConfig%22%3A%7B%22html5PlaybackOnesieConfig%22%3A%7B%22commonConfig%22%3A%7B%22url%22%3A%22https%3A%2F%2Frr3---sn-cvh76nl7.googlevideo.com%2Finitplayback%3Fsource%3Dyoutube%26oeis%3D1%26c%3DWEB%26oad%3D3200%26ovd%3D3200%26oaad%3D11000%26oavd%3D11000%26ocs%3D700%26oewis%3D1%26oputc%3D1%26ofpcc%3D1%26siu%3D1%26msp%3D1%26odepv%3D1%26onvi%3D1%26id%3D2600cd150d9168b4%26ip%3D20.233.70.32%26mt%3D1750093339%26oweuc%3D%22%7D%7D%7D%2C%22startTimeSeconds%22%3A0%7D%7D'\nimport re\nallowed = set(re.findall(r'[a-zA-Z0-9_\\-=;. /+:&]', cookies))\nactual = set(cookies)\ninvalid = actual - allowed\nprint('Invalid chars found:', sorted(invalid))\nprint('Count:', len(invalid))\n\")",
      "Bash(python3 test_fresh_download.py)",
      "Bash(rm test_fresh_cookies.py test_fresh_download.py)",
      "Bash(yt-dlp --version)",
      "Bash(yt-dlp --simulate --print \"%(title)s\" \"https://www.youtube.com/watch?v=JgDNFQ2RaLQ\")",
      "Bash(yt-dlp --list-extractors)",
      "Bash(pip install --upgrade yt-dlp)",
      "Bash(pipx install --force yt-dlp)",
      "Bash(sudo apt update)",
      "Bash(sudo apt install pipx -y)",
      "Bash(yt-dlp --impersonate chrome --simulate --print \"%(title)s\" \"https://www.youtube.com/watch?v=JgDNFQ2RaLQ\")",
      "Bash(yt-dlp --list-impersonate-targets)",
      "Bash(python3 test_with_headers.py)",
      "Bash(python3 -c \"\nimport re\nurl = 'https://www.youtube.com/watch?v=NdOqUnTAJ5o'\npattern = r'[;&|\\`\\$\\(\\)]'\nmatches = re.findall(pattern, url)\nprint('URL matches:', matches)\n\ntitle = '(1) Ïù¥Î£®Î¶¨ (Luli Lee) - I Feel Your Love [Live Clip] - YouTube'\nmatches = re.findall(pattern, title)\nprint('Title matches:', matches)\n\ncookies = 'PREF=f6=40000080&tz=Asia.Dubai&f4=4000000&f7=100&f5=20000; APISID=keR0A-QDkPA0UzlT/AMb6NbpitMW4GfPIa'\nmatches = re.findall(pattern, cookies)\nprint('Cookies matches:', matches[:10])  # Just first 10\n\")",
      "Bash(python3 test_json_fix.py)",
      "Bash(rm test_json_fix.py)",
      "Bash(python3 test_ytdlp_download.py)",
      "Bash(yt-dlp --format \"best[height<=720]\" --output \"%(title)s.%(ext)s\" \"https://www.youtube.com/watch?v=NdOqUnTAJ5o\")",
      "Bash(yt-dlp --cookies cookies.txt --user-agent \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36\" --referer \"https://www.youtube.com/watch?v=NdOqUnTAJ5o&list=RDNdOqUnTAJ5o&start_radio=1\" --format \"best[height<=720]\" --output \"%(title)s.%(ext)s\" \"https://www.youtube.com/watch?v=NdOqUnTAJ5o\")",
      "Bash(yt-dlp --cookies-from-browser chrome --format \"best[height<=720]\" --output \"%(title)s.%(ext)s\" \"https://www.youtube.com/watch?v=NdOqUnTAJ5o\")",
      "Bash(yt-dlp --cookies-from-browser firefox --format \"best[height<=720]\" --output \"%(title)s.%(ext)s\" \"https://www.youtube.com/watch?v=NdOqUnTAJ5o\")",
      "Bash(python3 test_json_download.py)",
      "Bash(python3 debug_cookies.py)",
      "Bash(yt-dlp --cookies-from-browser firefox --print-traffic --verbose --simulate \"https://www.youtube.com/watch?v=NdOqUnTAJ5o\" 2 >& 1)",
      "Bash(yt-dlp --cookies-from-browser firefox --cookies /tmp/firefox_cookies.txt --simulate --quiet \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\")",
      "Bash(sqlite3 \"/home/kilombo/snap/firefox/common/.mozilla/firefox/3lvhv0r5.default/cookies.sqlite\" \"SELECT name, value FROM moz_cookies WHERE host LIKE ''%youtube%'' OR host LIKE ''%google%'' LIMIT 10;\")",
      "Bash(yt-dlp --cookies-from-browser firefox --format \"best[height<=720]\" --output \"%(title)s.%(ext)s\" \"https://www.youtube.com/watch?v=NdOqUnTAJ5o\" --verbose 2 >& 1)",
      "Bash(yt-dlp --extractor-args \"youtube:player_client=android\" --format \"best[height<=720]\" --simulate \"https://www.youtube.com/watch?v=NdOqUnTAJ5o\")",
      "Bash(python3 test_new_json.py)",
      "Bash(python3 debug_new_cookies.py)",
      "Bash(# Create a test cookies file\ncat > /tmp/test_cookies.txt << 'EOF'\n# Netscape HTTP Cookie File\n# This is a generated file! Do not edit.\n\n.youtube.com\tTRUE\t/\tTRUE\t2147483647\tPREF\tf6=40000080&tz=Asia.Dubai&f4=4000000&f7=100&f5=20000\n.youtube.com\tTRUE\t/\tTRUE\t2147483647\tAPISID\tkeR0A-QDkPA0UzlT/AMb6NbpitMW4GfPIa\n.youtube.com\tTRUE\t/\tTRUE\t2147483647\tSAPISID\t1yV6K3ccJoc9PTBp/AqEeVebHJSw3c8InR\n.youtube.com\tTRUE\t/\tTRUE\t2147483647\tSID\tg.a000xghoV9aYkrsD_5BTNBzgvag6tKypBxbeUgrXtPERdyyeJ7IiYbMKaFUXFlMgv9ZPMnVBDQACgYKAXkSARASFQHGX2Mik8ivzCtfYS_lJYysax84KxoVAUF8yKrRP4bWDQhacH1Rdo7dbSVj0076\n.youtube.com\tTRUE\t/\tTRUE\t2147483647\tST-3opvp5\tsession_logininfo=AFmmF2swRQIgWZ5_tkyz7kIwgUiNvJHA6rIX5kpKkA_74z3V5fXEHRUCIQD0EZ05S-l4kTkkj1ThjFT4LybYFf-awWBcORfZBtRXcA%3AQUQ3MjNmeE1xSDlwZk9kQWxob3huQUY4b013Z2treG11RWY4VUpFcVAtQV9xbmFRMm9IUll0aTFSelQ1UFd5YWM0NklmVExJRlBqM05TdjEwVVAwSnl5NVhjc0tmNV9jX2ljQUNKZ1FabFZ2ZVctQVV3ZmZoaU5UVlVqUktJdElWWFRjcjlxWXBkXzNEUk9VcktrU1pyeXlHSmhsM2tDcll3\n.youtube.com\tTRUE\t/\tTRUE\t2147483647\tSIDCC\tAKEyXzW9oq6veDys2RJCh_nZQHImxXHF61Ym5-o_8qmSRUOJCde0tlkkbs_-1y03spcW5ATKfA8\nEOF\n\n# Test directly with yt-dlp\nyt-dlp --cookies /tmp/test_cookies.txt --simulate --print-traffic \"https://www.youtube.com/watch?v=zNCu7qicbI0\" 2>&1 | head -20)",
      "Bash(python test_enhanced_cookies.py)",
      "Bash(python3 test_enhanced_cookies.py)",
      "Bash(ls -la test_downloads/)",
      "Bash(ffprobe -v quiet -select_streams v:0 -show_entries stream=codec_name,width,height,r_frame_rate test_downloads/test_enhanced_h264.mp4)",
      "Bash(rm -rf test_downloads/)",
      "Bash(rm -f debug_new_cookies.py test_new_json.py test_enhanced_cookies.py test_download_hls.json)",
      "Bash(ls -la)",
      "Bash(rm -f debug_cookies.py test_json_download.py test_simple_youtube.py test_with_headers.py test_ytdlp_download.py)",
      "Bash(python3 test_fresh_json.py)",
      "Bash(grep -n \"validate_download_request\" app.py)",
      "Bash(python3 test_cookie_validation.py)",
      "Bash(python3 test_full_cookies.py)",
      "Bash(python3 test_security_validation.py)",
      "Bash(rm -f test_cookie_validation.py test_full_cookies.py test_security_validation.py test_fresh_json.py)",
      "Bash(grep -n \"create_temp_cookies_file\" video_downloader.py)",
      "Bash(grep -n \"def download_worker\" app.py)",
      "Bash(grep -n \"function getEnhancedCookies\" /home/kilombo/code/video-capture-extension-cookies/content.js)",
      "Bash(python3 /home/kilombo/code/video-downloader/video_downloader.py --json-file /home/kilombo/code/video-downloader/test_download.json --verbose)",
      "Bash(python3 /home/kilombo/code/video-downloader/video_downloader.py --json-file /home/kilombo/code/video-downloader/test_download_new.json --verbose)",
      "Bash(git commit -m \"$(cat <<'EOF'\nUpdate video downloader with enhanced features and security\n\n- Enhanced security with rate limiting and input validation\n- Added performance optimization utilities\n- Updated documentation and setup guides\n- Improved user interface and error handling\n- Added security testing and utilities\n- Updated dependencies and configuration\n\nü§ñ Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git pull origin master)",
      "Bash(git pull --rebase origin master)",
      "Bash(git commit --amend --no-edit)",
      "Bash(python app.py)",
      "Bash(python3 -c \"from video_downloader import download_video; print('video_downloader import success')\")",
      "Bash(python3 -c \"from security_utils import validate_download_request; print('security_utils import success')\")",
      "Bash(python3 -c \"from rate_limiter import rate_limit; print('rate_limiter import success')\")",
      "Bash(python3 test_download.py)",
      "Bash(rm test_download.py)",
      "Bash(pkill -f \"python3 app.py\")",
      "Bash(true)",
      "Bash(grep -n \"^def \" app.py)",
      "Bash(grep -n -i \"history\" /home/kilombo/code/video-downloader/templates/index.html)",
      "Bash(grep -n \"Paste JSON\" /home/kilombo/code/video-downloader/templates/index.html)"
    ],
    "deny": []
  }
}